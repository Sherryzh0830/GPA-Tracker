[{"/Users/sherryzhang/Desktop/REACT_LEARNING/lesson1/client/src/element/course/course.js":"1","/Users/sherryzhang/Desktop/REACT_LEARNING/lesson1/client/src/element/course/Course.js":"2","/Users/sherryzhang/Desktop/REACT_LEARNING/GPA Trackr/client/src/index.js":"3","/Users/sherryzhang/Desktop/REACT_LEARNING/GPA Trackr/client/src/reportWebVitals.js":"4","/Users/sherryzhang/Desktop/REACT_LEARNING/GPA Trackr/client/src/App.js":"5","/Users/sherryzhang/Desktop/REACT_LEARNING/GPA Trackr/client/src/Nav.js":"6","/Users/sherryzhang/Desktop/REACT_LEARNING/GPA Trackr/client/src/element/Main.js":"7","/Users/sherryzhang/Desktop/REACT_LEARNING/GPA Trackr/client/src/element/Home.js":"8","/Users/sherryzhang/Desktop/REACT_LEARNING/GPA Trackr/client/src/element/Footer/Footer.js":"9","/Users/sherryzhang/Desktop/REACT_LEARNING/GPA Trackr/client/src/element/edit/EditAllCourses.js":"10","/Users/sherryzhang/Desktop/REACT_LEARNING/GPA Trackr/client/src/element/edit/InputPage.js":"11","/Users/sherryzhang/Desktop/REACT_LEARNING/GPA Trackr/client/src/Dropdown.js":"12","/Users/sherryzhang/Desktop/REACT_LEARNING/GPA Trackr/client/src/element/course/Course.js":"13","/Users/sherryzhang/Desktop/REACT_LEARNING/GPA Trackr/client/src/element/course/GradeConversion.js":"14","/Users/sherryzhang/Desktop/REACT_LEARNING/GPA Trackr/client/src/element/About.js":"15"},{"size":3026,"mtime":1646362724107,"results":"16","hashOfConfig":"17"},{"size":10279,"mtime":1647074552904,"results":"18","hashOfConfig":"17"},{"size":640,"mtime":1646473644175,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1644664491683,"results":"21","hashOfConfig":"20"},{"size":946,"mtime":1647089849024,"results":"22","hashOfConfig":"20"},{"size":838,"mtime":1647089845896,"results":"23","hashOfConfig":"20"},{"size":813,"mtime":1647090990016,"results":"24","hashOfConfig":"20"},{"size":2146,"mtime":1647091793434,"results":"25","hashOfConfig":"20"},{"size":2609,"mtime":1646728782216,"results":"26","hashOfConfig":"20"},{"size":5503,"mtime":1647075144356,"results":"27","hashOfConfig":"20"},{"size":6417,"mtime":1647075161210,"results":"28","hashOfConfig":"20"},{"size":111,"mtime":1646642830947,"results":"29","hashOfConfig":"20"},{"size":10451,"mtime":1647089528933,"results":"30","hashOfConfig":"20"},{"size":2462,"mtime":1647071792727,"results":"31","hashOfConfig":"20"},{"size":647,"mtime":1647090086864,"results":"32","hashOfConfig":"20"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"12ulabd",{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1n3umtl",{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"55"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"55"},"/Users/sherryzhang/Desktop/REACT_LEARNING/lesson1/client/src/element/course/course.js",[],[],["87","88"],"/Users/sherryzhang/Desktop/REACT_LEARNING/lesson1/client/src/element/course/Course.js",["89","90","91"],[],"import \"./course.css\";\nimport React, { useState } from \"react\";\nimport Axios from \"axios\";\nimport \"../edit/InputPage.css\";\nimport { Link } from \"react-router-dom\";\nimport { FaEdit } from \"react-icons/fa\";\nimport { IconContext } from \"react-icons\";\nimport GradeConversion from \"./GradeConversion\";\nimport { Grid } from \"@material-ui/core\";\n\nexport default function Course() {\n  const [ListofCourse, setListofCourse] = useState([]);\n  const [Class, setClass] = useState([]);\n  const [Quarter, setQuarter] = useState([]);\n  const [display, setDisplay] = useState(\"\");\n  const [show, setShow] = useState(false);\n  const [courseName, setcourseName] = useState(\"\");\n  const [quarter, setquarter] = useState(\"\");\n  const [finalgrade, setFinalgrade] = useState(\"\");\n  const selectedClass = display;\n  const distinctQuarter = [...new Set(ListofCourse.map((x) => x.quarter))];\n\n  const [selectedCourse, setSelectedCourse] = useState(\"\");\n  const [selectedQuarter, setSelectedQuarter] = useState(\"\");\n\n  const [lettergrade, setLettergrade] = useState(\"\");\n  const scale = [\n    {\n      id: 1,\n      min: 90,\n      max: 100,\n      letter: \"A+\",\n      gpa: \"4.0\",\n    },\n    {\n      id: 2,\n      min: 85,\n      max: 89,\n      letter: \"A\",\n      gpa: \"4.0\",\n    },\n    {\n      id: 3,\n      min: 80,\n      max: 84,\n      letter: \"A-\",\n      gpa: 3.7,\n    },\n    {\n      id: 4,\n      min: 77,\n      max: 79,\n      letter: \"B+\",\n      gpa: 3.3,\n    },\n    {\n      id: 5,\n      min: 73,\n      max: 76,\n      letter: \"B\",\n      gpa: \"3.0\",\n    },\n    {\n      id: 6,\n      min: 70,\n      max: 72,\n      letter: \"B-\",\n      gpa: 2.7,\n    },\n    {\n      id: 7,\n      min: 67,\n      max: 69,\n      letter: \"C+\",\n      gpa: 2.3,\n    },\n    {\n      id: 8,\n      min: 63,\n      max: 66,\n      letter: \"C\",\n      gpa: \"2.0\",\n    },\n    {\n      id: 9,\n      min: 60,\n      max: 62,\n      letter: \"C-\",\n      gpa: 1.7,\n    },\n    {\n      id: 10,\n      min: 57,\n      max: 59,\n      letter: \"D+\",\n      gpa: 1.3,\n    },\n    {\n      id: 11,\n      min: 53,\n      max: 56,\n      letter: \"D\",\n      gpa: \"1.0\",\n    },\n    {\n      id: 12,\n      min: 50,\n      max: 52,\n      letter: \"D-\",\n      gpa: 0.7,\n    },\n    {\n      id: 13,\n      min: 0,\n      max: 49,\n      letter: \"F\",\n      gpa: 0,\n    },\n  ];\n\n  const convertLetter = (numGrade) => {\n    for (var i = 1; i < scale.length; i++) {\n      if (numGrade >= scale[i].min && numGrade <= scale[i].max) {\n        setLettergrade(scale[i].letter);\n      }\n    }\n  };\n\n  const CalculateGrade = () => {\n    var result = 0;\n    Class.map((val) => {\n      result = Math.round(result + val.weight * val.grade * 0.01);\n    });\n    setFinalgrade(result);\n  };\n\n  Axios.get(\"http://localhost:3001/getCourse\").then((response) => {\n    setListofCourse(response.data);\n  });\n\n  const AddCourse = () => {\n    Axios.post(\"http://localhost:3001/createCourse\", {\n      quarter: quarter,\n      courseName: courseName,\n    }).then(() => {\n      setListofCourse([\n        ...ListofCourse,\n        { quarter: quarter, courseName: courseName },\n      ]);\n    });\n    setShow(!show);\n  };\n\n  const GetClassEvent = (selectedClass) => {\n    console.log(selectedClass);\n    Axios.get(`http://localhost:3001/findCourse/${selectedClass}`).then(\n      (response) => {\n        console.log(response.data);\n        setClass(response.data);\n      }\n    );\n  };\n  const GetQuarterObject = (selectedQuarter) => {\n    console.log(selectedQuarter);\n    Axios.get(`http://localhost:3001/findQuarter/${selectedQuarter}`).then(\n      (response) => {\n        console.log(response.data);\n        setQuarter(response.data);\n      }\n    );\n  };\n\n  return (\n    <div className=\"whole-page\">\n      <Grid lg={12} item container spacing={1}>\n        <Grid item lg={3} sm={3} xs={3}>\n          <div className=\"dropdown menu\">\n            <label for=\"term-names\">Choose a quarter: </label>\n            <select\n              name=\"term-names\"\n              id=\"term-names\"\n              onChange={(event) => {\n                setSelectedQuarter(event.currentTarget.value);\n                GetQuarterObject(event.target.value);\n                setFinalgrade(\"\");\n                setLettergrade(\"\");\n              }}\n              placeholder=\"Term\"\n              className=\"term-select\"\n            >\n              {distinctQuarter.map((val) => {\n                return <option value={val}>{val}</option>;\n              })}\n            </select>\n            <br />\n            <label for=\"class-names\">Choose a course: </label>\n            <select\n              name=\"class-names\"\n              id=\"class-names\"\n              onClick={(event) => {\n                setSelectedCourse(event.currentTarget.value);\n                if (!show) {\n                  setShow(!show);\n                }\n                setFinalgrade(\"\");\n                setLettergrade(\"\");\n              }}\n              onChange={(event) => {\n                setSelectedCourse(event.currentTarget.value);\n              }}\n              className=\"course-select\"\n            >\n              {Quarter.map((val) => {\n                return <option value={val.courseName}>{val.courseName}</option>;\n              })}\n            </select>\n\n            <button\n              onClick={() => {\n                document.getElementsByClassName(\"Add-Course\")[0].style.display =\n                  \"block\";\n              }}\n              style={{\n                backgroundColor: \"#f4d35e\",\n                borderColor: \"#faf0ca\",\n                padding: \"0.4rem\",\n                color: \"#0d3b66\",\n                marginTop: \"10px\",\n              }}\n            >\n              Add Course\n            </button>\n            <div className=\"Add-Course\">\n              <h5>Add More Courses Here!</h5>\n              <input\n                type=\"text\"\n                onChange={(course) => setquarter(course.target.value)}\n                value={quarter}\n                placeholder=\"Quarter...\"\n              />\n              <input\n                type=\"text\"\n                onChange={(course) => setcourseName(course.target.value)}\n                value={courseName}\n                placeholder=\"Course name...\"\n              />\n              <br />\n              <button\n                onClick={() => {\n                  AddCourse();\n                  document.getElementsByClassName(\n                    \"Add-Course\"\n                  )[0].style.display = \"none\";\n                }}\n                style={{ marginTop: \"5px\", marginRight: \"5px\" }}\n              >\n                Submit\n              </button>\n              <button\n                onClick={() => {\n                  document.getElementsByClassName(\n                    \"Add-Course\"\n                  )[0].style.display = \"none\";\n                }}\n              >\n                Cancel\n              </button>\n            </div>\n          </div>\n          <ul className=\"editbutton\">\n            <Link\n              to=\"/EditAllCourses\"\n              style={{\n                textDecoration: \"none\",\n                fontSize: \"1em\",\n                color: \"#0d3b66\",\n              }}\n            >\n              <FaEdit />\n              Edit courses\n            </Link>\n          </ul>\n        </Grid>\n        <Grid item lg={9} sm={9} xs={9}>\n          <div className=\"content\">\n            <h6>{selectedQuarter}</h6>\n            <h4> {selectedCourse}</h4>\n\n            {show && ( //get class detail\n              <>\n                <button\n                  onClick={() => {\n                    GetClassEvent(selectedCourse);\n                    document.getElementsByClassName(\n                      \"edit-button\"\n                    )[0].style.display = \"block\";\n                  }}\n                  style={{\n                    backgroundColor: \"#f4d35e\",\n                    borderColor: \"#faf0ca\",\n                    padding: \"0.4rem\",\n                    color: \"#0d3b66\",\n                  }}\n                >\n                  Get Class Detail\n                </button>\n\n                <br />\n              </>\n            )}\n\n            <div>\n              <h3 className=\"courseName\">{display}</h3>\n              <table className=\"courseTable\">\n                <thead>\n                  <tr>\n                    <th>Component</th>\n                    <th>Weight</th>\n                    <th>Grade</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {Class.map((val) => {\n                    return (\n                      <tr>\n                        <td>{val.component}</td>\n                        <td>{val.weight}%</td>\n                        <td>{val.grade}</td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n\n              <table className=\"courseTable\">\n                <tr>\n                  <td>Final Grade</td>\n                  <td>\n                    <button\n                      onClick={() => {\n                        CalculateGrade();\n                      }}\n                      className=\"calculate\"\n                    >\n                      Calculate\n                    </button>\n                    <button\n                      onClick={() => {\n                        convertLetter(finalgrade);\n                      }}\n                      className=\"calculate\"\n                    >\n                      Letter Grade\n                    </button>\n                  </td>\n                  <td>\n                    {finalgrade} {\"\"} {\"\"}\n                    {lettergrade}\n                  </td>\n                </tr>\n              </table>\n\n              <IconContext.Provider value={{ color: \"#0d3b66\", size: \"1em\" }}>\n                <ul className=\"editbutton\">\n                  <Link\n                    to=\"/InputPage\"\n                    style={{\n                      textDecoration: \"none\",\n                      fontSize: \"1em\",\n                      color: \"#0d3b66\",\n                    }}\n                  >\n                    <FaEdit />\n                    Edit components\n                  </Link>\n                </ul>\n              </IconContext.Provider>\n              <hr />\n            </div>\n            <GradeConversion />\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n",["92","93"],"/Users/sherryzhang/Desktop/REACT_LEARNING/GPA Trackr/client/src/index.js",[],[],"/Users/sherryzhang/Desktop/REACT_LEARNING/GPA Trackr/client/src/reportWebVitals.js",[],[],"/Users/sherryzhang/Desktop/REACT_LEARNING/GPA Trackr/client/src/App.js",[],[],"/Users/sherryzhang/Desktop/REACT_LEARNING/GPA Trackr/client/src/Nav.js",["94","95","96","97"],[],"import React,{useState} from \"react\";\nimport \"./App.css\";\nimport { Link } from \"react-router-dom\";\nimport logo from \"./images/GPA Trackr Logo/logo.png\";\nimport Dropdown from \"./Dropdown\";\nimport {FaBook, FaTimes} from \"react-icons/fa\";\n\nexport default function Nav() {\n  const [click, setClick] = useState(false);\n  const handleClick = () => setClick(!click);\n\n  return (\n    <nav>\n      <img src={logo} alt=\"logo\" className=\"logo\"></img>\n\n      <ul className=\"nav-links\">\n        <Link to=\"/\" style={{ textDecoration: \"none\", color: \"white\" }}>\n          Home\n        </Link>\n        <Link to=\"/About\" style={{ textDecoration: \"none\", color: \"white\" }}>\n          About\n        </Link>\n        <Link to=\"/Main\" style={{ textDecoration: \"none\", color: \"white\" }}>\n          Courses\n        </Link>\n\n        \n      </ul>\n    </nav>\n  );\n}\n",["98","99"],"/Users/sherryzhang/Desktop/REACT_LEARNING/GPA Trackr/client/src/element/Main.js",[],[],["100","101"],"/Users/sherryzhang/Desktop/REACT_LEARNING/GPA Trackr/client/src/element/Home.js",["102","103","104","105"],[],"import React from \"react\";\nimport book from \"../images/book.jpeg\";\nimport { Link } from \"react-router-dom\";\nimport \"./Main.css\";\n\n\nexport default function Home() {\n  return (\n    <div>\n      <hr />\n\n      <header\n        className=\"App-header\"\n        style={{\n          background: \"#1e3c72\" /* fallback for old browsers */,\n          background:\n            \"-webkit-linear-gradient(to right, #2a5298, #1e3c72)\" /* Chrome 10-25, Safari 5.1-6 */,\n          background:\n            \"linear-gradient(to right, #2a5298, #1e3c72)\" /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */,\n        }}\n      >\n        <h1 style={{ fontWeight: \"bolder\" }}>Welcome to the GPA Tracker!</h1>\n        <button\n          style={{\n            fontSize: \"0.8em\",\n            color: \"white\",\n            background: \"#7F7FD5\" /* fallback for old browsers */,\n            background:\n              \"-webkit-linear-gradient(to right, #91EAE4, #86A8E7, #7F7FD5)\" /* Chrome 10-25, Safari 5.1-6 */,\n            background:\n              \"linear-gradient(to right, #91EAE4, #86A8E7, #7F7FD5)\" /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */,\n            border: \"1px white\",\n            borderRadius: \"5px 5px\",\n          }}\n          \n        >\n          <Link\n            to=\"/About\"\n            style={{\n              textDecoration: \"none\",\n              color: \"white\",\n              WebkitTextStroke:\"0.2px black\",\n              fontWeight:\"bold\"\n            }}\n          >\n            About\n          </Link>\n        </button>\n      </header>\n\n      <hr />\n\n      <div\n        style={{\n          backgroundImage: `url(${book})`,\n          height: \"400px\",\n          backgroundRepeat: \"no-repeat\",\n          marginLeft: \"31%\",\n        }}\n      >\n        <h4 style={{ width: \"180px\", marginLeft: \"6%\" }}>\n          <br />\n          <br />\n          This Web App is a simple tool that can help students keep track of\n          GPAs by calculating the distribution of grades.\n        </h4>\n      </div>\n      <div className=\"lil-text\">\n      <p className=\"lil-text\">Never forget to have fun!</p>\n      </div>\n    </div>\n  );\n}\n","/Users/sherryzhang/Desktop/REACT_LEARNING/GPA Trackr/client/src/element/Footer/Footer.js",["106","107","108"],[],"/Users/sherryzhang/Desktop/REACT_LEARNING/GPA Trackr/client/src/element/edit/EditAllCourses.js",["109","110","111"],[],"/Users/sherryzhang/Desktop/REACT_LEARNING/GPA Trackr/client/src/element/edit/InputPage.js",["112"],[],"/Users/sherryzhang/Desktop/REACT_LEARNING/GPA Trackr/client/src/Dropdown.js",[],[],"/Users/sherryzhang/Desktop/REACT_LEARNING/GPA Trackr/client/src/element/course/Course.js",["113","114","115"],[],"import \"./course.css\";\nimport React, { useState } from \"react\";\nimport Axios from \"axios\";\nimport \"../edit/InputPage.css\";\nimport { Link } from \"react-router-dom\";\nimport { FaEdit } from \"react-icons/fa\";\nimport { IconContext } from \"react-icons\";\nimport GradeConversion from \"./GradeConversion\";\nimport { Grid } from \"@material-ui/core\";\n\nexport default function Course() {\n  const [ListofCourse, setListofCourse] = useState([]);\n  const [Class, setClass] = useState([]);\n  const [Quarter, setQuarter] = useState([]);\n  const [display, setDisplay] = useState(\"\");\n  const [show, setShow] = useState(false);\n  const [courseName, setcourseName] = useState(\"\");\n  const [quarter, setquarter] = useState(\"\");\n  const [finalgrade, setFinalgrade] = useState(\"\");\n  const selectedClass = display;\n  const distinctQuarter = [...new Set(ListofCourse.map((x) => x.quarter))];\n\n  const [selectedCourse, setSelectedCourse] = useState(\"\");\n  const [selectedQuarter, setSelectedQuarter] = useState(\"\");\n\n  const [lettergrade, setLettergrade] = useState(\"\");\n  const scale = [\n    {\n      id: 1,\n      min: 90,\n      max: 100,\n      letter: \"A+\",\n      gpa: \"4.0\",\n    },\n    {\n      id: 2,\n      min: 85,\n      max: 89,\n      letter: \"A\",\n      gpa: \"4.0\",\n    },\n    {\n      id: 3,\n      min: 80,\n      max: 84,\n      letter: \"A-\",\n      gpa: 3.7,\n    },\n    {\n      id: 4,\n      min: 77,\n      max: 79,\n      letter: \"B+\",\n      gpa: 3.3,\n    },\n    {\n      id: 5,\n      min: 73,\n      max: 76,\n      letter: \"B\",\n      gpa: \"3.0\",\n    },\n    {\n      id: 6,\n      min: 70,\n      max: 72,\n      letter: \"B-\",\n      gpa: 2.7,\n    },\n    {\n      id: 7,\n      min: 67,\n      max: 69,\n      letter: \"C+\",\n      gpa: 2.3,\n    },\n    {\n      id: 8,\n      min: 63,\n      max: 66,\n      letter: \"C\",\n      gpa: \"2.0\",\n    },\n    {\n      id: 9,\n      min: 60,\n      max: 62,\n      letter: \"C-\",\n      gpa: 1.7,\n    },\n    {\n      id: 10,\n      min: 57,\n      max: 59,\n      letter: \"D+\",\n      gpa: 1.3,\n    },\n    {\n      id: 11,\n      min: 53,\n      max: 56,\n      letter: \"D\",\n      gpa: \"1.0\",\n    },\n    {\n      id: 12,\n      min: 50,\n      max: 52,\n      letter: \"D-\",\n      gpa: 0.7,\n    },\n    {\n      id: 13,\n      min: 0,\n      max: 49,\n      letter: \"F\",\n      gpa: 0,\n    },\n  ];\n\n  const convertLetter = (numGrade) => {\n    for (var i = 1; i < scale.length; i++) {\n      if (numGrade >= scale[i].min && numGrade <= scale[i].max) {\n        setLettergrade(scale[i].letter);\n      }\n    }\n  };\n\n  const CalculateGrade = () => {\n    var result = 0;\n    Class.map((val) => {\n      result = Math.round(result + val.weight * val.grade * 0.01);\n    });\n    setFinalgrade(result);\n  };\n\n  Axios.get(\"http://localhost:3001/getCourse\").then((response) => {\n    setListofCourse(response.data);\n  });\n\n  const AddCourse = () => {\n    Axios.post(\"http://localhost:3001/createCourse\", {\n      quarter: quarter,\n      courseName: courseName,\n    }).then(() => {\n      setListofCourse([\n        ...ListofCourse,\n        { quarter: quarter, courseName: courseName },\n      ]);\n    });\n    setShow(!show);\n  };\n\n  const GetClassEvent = (selectedClass) => {\n    console.log(selectedClass);\n    Axios.get(`http://localhost:3001/findCourse/${selectedClass}`).then(\n      (response) => {\n        console.log(response.data);\n        setClass(response.data);\n      }\n    );\n  };\n  const GetQuarterObject = (selectedQuarter) => {\n    console.log(selectedQuarter);\n    Axios.get(`http://localhost:3001/findQuarter/${selectedQuarter}`).then(\n      (response) => {\n        console.log(response.data);\n        setQuarter(response.data);\n      }\n    );\n  };\n\n  return (\n    <div className=\"whole-page\" style={{ marginTop: \"10px\" }}>\n      <Grid lg={12} item container spacing={1}>\n        <Grid item lg={3} sm={3} xs={3}>\n          <div className=\"dropdown menu\">\n            <label for=\"term-names\">Choose a quarter: </label>\n            <br />\n            <select\n              name=\"term-names\"\n              id=\"term-names\"\n              onChange={(event) => {\n                setSelectedQuarter(event.currentTarget.value);\n                GetQuarterObject(event.target.value);\n                setFinalgrade(\"\");\n                setLettergrade(\"\");\n              }}\n              placeholder=\"Term\"\n              className=\"term-select\"\n            >\n              {distinctQuarter.map((val) => {\n                return <option value={val}>{val}</option>;\n              })}\n            </select>\n            <br />\n            <label for=\"class-names\">Choose a course: </label>\n            <br />\n            <select\n              name=\"class-names\"\n              id=\"class-names\"\n              onClick={(event) => {\n                setSelectedCourse(event.currentTarget.value);\n                if (!show) {\n                  setShow(!show);\n                }\n                setFinalgrade(\"\");\n                setLettergrade(\"\");\n              }}\n              onChange={(event) => {\n                setSelectedCourse(event.currentTarget.value);\n              }}\n              className=\"course-select\"\n            >\n              {Quarter.map((val) => {\n                return <option value={val.courseName}>{val.courseName}</option>;\n              })}\n            </select>\n            <br />\n            <button\n              onClick={() => {\n                document.getElementsByClassName(\"Add-Course\")[0].style.display =\n                  \"block\";\n              }}\n              style={{\n                backgroundColor: \"#f4d35e\",\n                borderColor: \"#faf0ca\",\n                padding: \"0.4rem\",\n                color: \"#0d3b66\",\n                marginTop: \"10px\",\n                borderRadius: \"5px 5px\",\n              }}\n            >\n              Add Course\n            </button>\n            <div className=\"Add-Course\">\n              <h5>Add More Courses Here!</h5>\n              <input\n                type=\"text\"\n                onChange={(course) => setquarter(course.target.value)}\n                value={quarter}\n                placeholder=\"Quarter...\"\n              />\n              <input\n                type=\"text\"\n                onChange={(course) => setcourseName(course.target.value)}\n                value={courseName}\n                placeholder=\"Course name...\"\n              />\n              <br />\n              <button\n                onClick={() => {\n                  AddCourse();\n                  document.getElementsByClassName(\n                    \"Add-Course\"\n                  )[0].style.display = \"none\";\n                }}\n                style={{ marginTop: \"5px\", marginRight: \"5px\" }}\n              >\n                Submit\n              </button>\n              <button\n                onClick={() => {\n                  document.getElementsByClassName(\n                    \"Add-Course\"\n                  )[0].style.display = \"none\";\n                }}\n              >\n                Cancel\n              </button>\n            </div>\n          </div>\n          <ul className=\"editbutton\">\n            <Link\n              to=\"/EditAllCourses\"\n              style={{\n                textDecoration: \"none\",\n                fontSize: \"1em\",\n                color: \"#0d3b66\",\n              }}\n            >\n              <FaEdit />\n              Edit courses\n            </Link>\n          </ul>\n        </Grid>\n        <Grid item lg={9} sm={9} xs={9}>\n          <div className=\"content\">\n            <h5>{selectedQuarter}</h5>\n            <h2> {selectedCourse}</h2>\n\n            {show && ( //get class detail\n              <>\n                <button\n                  onClick={() => {\n                    GetClassEvent(selectedCourse);\n                    document.getElementsByClassName(\n                      \"edit-button\"\n                    )[0].style.display = \"block\";\n                  }}\n                  style={{\n                    backgroundColor: \"#f4d35e\",\n                    borderColor: \"#faf0ca\",\n                    padding: \"0.4rem\",\n                    color: \"#0d3b66\",\n                    borderRadius: \"5px 5px\",\n                  }}\n                >\n                  Get Class Detail\n                </button>\n\n                <br />\n              </>\n            )}\n\n            <div>\n              <h3 className=\"courseName\">{display}</h3>\n              <table className=\"courseTable\">\n                <thead>\n                  <tr>\n                    <th>Component</th>\n                    <th>Weight</th>\n                    <th>Grade</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {Class.map((val) => {\n                    return (\n                      <tr>\n                        <td>{val.component}</td>\n                        <td>{val.weight}%</td>\n                        <td>{val.grade}</td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n\n              <table className=\"courseTable\">\n                <tr>\n                  <td>Final Grade</td>\n                  <td>\n                    <button\n                      onClick={() => {\n                        CalculateGrade();\n                      }}\n                      className=\"calculate\"\n                    >\n                      Calculate\n                    </button>\n                    <button\n                      onClick={() => {\n                        convertLetter(finalgrade);\n                      }}\n                      className=\"calculate\"\n                    >\n                      Letter Grade\n                    </button>\n                  </td>\n                  <td>\n                    {finalgrade} {\"\"} {\"\"}\n                    {lettergrade}\n                  </td>\n                </tr>\n              </table>\n\n              <IconContext.Provider value={{ color: \"#0d3b66\", size: \"1em\" }}>\n                <ul className=\"editbutton\">\n                  <Link\n                    to=\"/InputPage\"\n                    style={{\n                      textDecoration: \"none\",\n                      fontSize: \"1em\",\n                      color: \"#0d3b66\",\n                    }}\n                  >\n                    <FaEdit />\n                    Edit components\n                  </Link>\n                </ul>\n              </IconContext.Provider>\n              <hr />\n            </div>\n            <GradeConversion />\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","/Users/sherryzhang/Desktop/REACT_LEARNING/GPA Trackr/client/src/element/course/GradeConversion.js",[],[],"/Users/sherryzhang/Desktop/REACT_LEARNING/GPA Trackr/client/src/element/About.js",["116","117","118"],[],"import React from \"react\";\nimport Course from \"./course/Course\";\n\nexport default function About() {\n  return (\n    <div>\n      <hr />\n      <header\n        className=\"App-header\"\n        style={{\n          background: \"#1a2a6c\",\n          background:\n            \"-webkit-linear-gradient(to right, #fdbb2d, #b21f1f, #1a2a6c)\" /* Chrome 10-25, Safari 5.1-6 */,\n          background:\n            \"linear-gradient(to right, #fdbb2d, #b21f1f, #1a2a6c)\" /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */,\n        }}\n      >\n        <h1 style={{ marginTop: \"20px\", fontWeight: \"bold\" }}>About</h1>\n      </header>\n    </div>\n  );\n}\n",{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":15,"column":19,"nodeType":"125","messageId":"126","endLine":15,"endColumn":29},{"ruleId":"123","severity":1,"message":"127","line":20,"column":9,"nodeType":"125","messageId":"126","endLine":20,"endColumn":22},{"ruleId":"128","severity":1,"message":"129","line":131,"column":21,"nodeType":"130","messageId":"131","endLine":131,"endColumn":23},{"ruleId":"119","replacedBy":"132"},{"ruleId":"121","replacedBy":"133"},{"ruleId":"123","severity":1,"message":"134","line":5,"column":8,"nodeType":"125","messageId":"126","endLine":5,"endColumn":16},{"ruleId":"123","severity":1,"message":"135","line":6,"column":9,"nodeType":"125","messageId":"126","endLine":6,"endColumn":15},{"ruleId":"123","severity":1,"message":"136","line":6,"column":17,"nodeType":"125","messageId":"126","endLine":6,"endColumn":24},{"ruleId":"123","severity":1,"message":"137","line":10,"column":9,"nodeType":"125","messageId":"126","endLine":10,"endColumn":20},{"ruleId":"119","replacedBy":"138"},{"ruleId":"121","replacedBy":"139"},{"ruleId":"119","replacedBy":"140"},{"ruleId":"121","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":16,"column":11,"nodeType":"144","messageId":"145","endLine":16,"endColumn":21},{"ruleId":"142","severity":1,"message":"143","line":18,"column":11,"nodeType":"144","messageId":"145","endLine":18,"endColumn":21},{"ruleId":"142","severity":1,"message":"143","line":28,"column":13,"nodeType":"144","messageId":"145","endLine":28,"endColumn":23},{"ruleId":"142","severity":1,"message":"143","line":30,"column":13,"nodeType":"144","messageId":"145","endLine":30,"endColumn":23},{"ruleId":"123","severity":1,"message":"146","line":6,"column":9,"nodeType":"125","messageId":"126","endLine":6,"endColumn":15},{"ruleId":"123","severity":1,"message":"147","line":7,"column":9,"nodeType":"125","messageId":"126","endLine":7,"endColumn":20},{"ruleId":"123","severity":1,"message":"135","line":8,"column":9,"nodeType":"125","messageId":"126","endLine":8,"endColumn":15},{"ruleId":"128","severity":1,"message":"148","line":105,"column":40,"nodeType":"130","messageId":"149","endLine":105,"endColumn":42},{"ruleId":"150","severity":1,"message":"151","line":107,"column":32,"nodeType":"152","messageId":"145","endLine":107,"endColumn":34},{"ruleId":"150","severity":1,"message":"151","line":114,"column":34,"nodeType":"152","messageId":"145","endLine":114,"endColumn":36},{"ruleId":"128","severity":1,"message":"148","line":117,"column":39,"nodeType":"130","messageId":"149","endLine":117,"endColumn":41},{"ruleId":"123","severity":1,"message":"124","line":15,"column":19,"nodeType":"125","messageId":"126","endLine":15,"endColumn":29},{"ruleId":"123","severity":1,"message":"127","line":20,"column":9,"nodeType":"125","messageId":"126","endLine":20,"endColumn":22},{"ruleId":"128","severity":1,"message":"129","line":131,"column":21,"nodeType":"130","messageId":"131","endLine":131,"endColumn":23},{"ruleId":"123","severity":1,"message":"153","line":2,"column":8,"nodeType":"125","messageId":"126","endLine":2,"endColumn":14},{"ruleId":"142","severity":1,"message":"143","line":12,"column":11,"nodeType":"144","messageId":"145","endLine":12,"endColumn":21},{"ruleId":"142","severity":1,"message":"143","line":14,"column":11,"nodeType":"144","messageId":"145","endLine":14,"endColumn":21},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],"no-unused-vars","'setDisplay' is assigned a value but never used.","Identifier","unusedVar","'selectedClass' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["154"],["155"],"'Dropdown' is defined but never used.","'FaBook' is defined but never used.","'FaTimes' is defined but never used.","'handleClick' is assigned a value but never used.",["154"],["155"],["154"],["155"],"no-dupe-keys","Duplicate key 'background'.","ObjectExpression","unexpected","'FaHome' is defined but never used.","'FaLaughWink' is defined but never used.","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","'Course' is defined but never used.","no-global-assign","no-unsafe-negation"]